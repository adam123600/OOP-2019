TODO: Create class diagram...

@startuml

class Observable {

{field}std::set<Observer*> observers
{method}+ void registerObserver(Observer*)
{method}+ void unregisterObserver(Observer*)
{method}# void notifyObservers(float)
}
note right: for(Observer* observer: observers )\n    observer->notify(value);

interface Observer {
{method}+ void notifly(float)
}

class Displacement {
{field}- float value
{method}+ void set(float)
}


class Acceleration {
{field}- bool hasFirstValue
{field}- bool hasSecondValue
{field}- bool hasThirdValue
{field}- float firstValue
{field}- float secondValue
{field}- float thirdValue
{method}+ float get()
}

class Speed {
{field}- bool hasFirstValue
{field}- bool hasSecondValue
{field}- float firstValue
{field}- float secondValue
{method}+ float get()
}


Observable <|-- Displacement
Observer <|-- Acceleration
Observer <|-- Speed

Displacement<.. Acceleration : observes
Displacement<.. Speed : observes
Observable "1" o-- "*" Observer


@enduml
